version: '3'
services:
  webapp:
    container_name: webapp
    build:
      context: webapp/.
      dockerfile: Dockerfile.dev
    image: dev-webapp
    volumes:
    - ./webapp/src:/vitaes/src
    - ./webapp/public:/vitaes/public
    networks:
    - net
  api:
    container_name: api
    build: renderer-api/.
    image: dev-api
    command: python3 Server.py
    restart: always
    ports:
    - 6001:6000
    depends_on:
    - rabbitmq
    - logger
    networks:
    - net
  renderer:
    container_name: renderer
    build: renderer-api/.
    image: dev-renderer
    command: python3 Consumer.py
    restart: always
    depends_on:
    - rabbitmq
    - logger
    networks:
    - net
  nginx:
    container_name: nginx
    build: nginx/.
    restart: always
    image: dev-nginx
    ports:
    - 80:80
    depends_on:
    - grafana
    - api
    - webapp
    - logger
    networks:
    - net
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:alpine
    restart: always
    networks:
    - net
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    networks:
    - net
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    ports:
    - 6003:3000
    volumes:
    - grafana-volume:/var/lib/grafana
    networks:
    - net
  logger:
    container_name: logger
    build: logger/.
    image: dev-logger
    restart: always
    environment:
    - SQLITE_DATABASE
    ports:
    - 6002:6000
    volumes:
    - log-volume:/data
    networks:
    - net
  influxdb:
    container_name: influxdb
    image: influxdb:1.7.4
    restart: always
    volumes:
    - influxdb-volume:/var/lib/influxdb
    networks:
    - net
  sqlite-web:
    container_name: sqlite-web
    image: coleifer/sqlite-web
    restart: always
    ports:
    - 6004:8080
    environment:
    - SQLITE_DATABASE
    volumes:
    - log-volume:/data
    networks:
    - net
volumes:
  grafana-volume:
    external: true
  influxdb-volume:
    external: true
  log-volume:
    external: true
networks:
  net:
