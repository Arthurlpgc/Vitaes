version: '3'
services:
  webapp:
    build:
      context: vitaes-webapp/.
      dockerfile: Dockerfile.dev
    image: vitaes/webapp
    volumes:
    - ./vitaes-webapp/src:/project/src
    - ./vitaes-webapp/public:/project/public
    networks:
    - net
  api:
    build: vitaes-renderer/.
    image: vitaes/api
    command: python3 Server.py
    restart: always
    ports:
    - 6001:6000
    depends_on:
    - rabbitmq
    - logger
    networks:
    - net
  renderer:
    build: vitaes-renderer/.
    image: vitaes/renderer
    command: python3 Consumer.py
    restart: always
    depends_on:
    - rabbitmq
    - logger
    networks:
    - net
  nginx:
    build: vitaes-nginx-http/.
    restart: always
    image: vitaes/nginxhttp
    ports:
    - 80:80
    depends_on:
    - grafana
    - api
    - webapp
    - logger
    networks:
    - net
  rabbitmq:
    image: rabbitmq:alpine
    restart: always
    networks:
    - net
  redis:
    image: redis
    restart: always
    networks:
    - net
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
    - 6003:3000
    volumes:
    - grafana-volume:/var/lib/grafana
    networks:
    - net
  logger:
    build: vitaes-logger/.
    image: vitaes/logger
    restart: always
    environment:
    - SQLITE_DATABASE
    ports:
    - 6002:6000
    volumes:
    - log-volume:/data
    networks:
    - net
  tsdb:
    image: influxdb:1.7.4
    container_name: tsdb
    restart: always
    volumes:
    - influxdb-volume:/var/lib/influxdb
    networks:
    - net
  sqlite-web:
    image: coleifer/sqlite-web
    restart: always
    ports:
    - 6004:8080
    environment:
    - SQLITE_DATABASE
    volumes:
    - log-volume:/data
    networks:
    - net
volumes:
  grafana-volume:
    external: true
  influxdb-volume:
    external: true
  log-volume:
    external: true
networks:
  net:
